/* uno.proto
Protocol Buffers for a GRPC service for the game UNO.
*/
syntax = "proto3";

enum CardColour {
    WHITE = 0; // default value 
    RED = 1;
    BLUE = 2;
    GREEN = 3;
    YELLOW = 4;
    BLACK = 5; // used for WILD and WILD_DRAW4 cards.
}

enum CardAction {
    NONE = 0;
    NUMBER = 1;
    REVERSE = 2;
    DRAW2 = 3;
    SKIP = 4;
    WILD = 5;
    WILD_DRAW4 = 6;
}

message Card {
    CardColour colour = 1;
    CardAction action = 2;
    uint32 value = 3; // amount added to score by this card and the value of a NumCard.
}

message Player {
    repeated Card hand = 4;
    string name = 5;
    bool uno_declared = 6;
    uint32 score = 7;

}

message StateOfPlay {
    uint32 round_num = 8;
    repeated Player players= 9;  // a client could use this to cheat... - happens IRL ðŸ¤·.
    uint32 current_player = 10;
    repeated Card discard_pile = 11;
    repeated Card draw_pile = 12;
    bool round_over = 13;
    bool game_over = 14;
}


service Uno {
    rpc RequestStateOfPlay (Player) returns (StateOfPlay) {}
    rpc PlayCard (Card) returns (StateOfPlay) {}
    rpc DrawCard (Player) returns (Card) {} // can be sent repeatedly if multiple cards need drawing.
}